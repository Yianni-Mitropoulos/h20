================
=== Welcome! ===
================

@ paragraph
Welcome to the Hero to Zero guide to personal computing!

@ paragraph
By following this guide, you'll gain a level of security (etc.) that most experts consider unattainable for the average user.

@ paragraph
As usual, Hero to Zero does not condone criminality. Your first line of defense against institutional overreach is to follow the law, and do the right thing.

@ paragraph
Some basic Linux knowledge will be helpful, but isn't essential.

@ paragraph
If in doubt, you can discuss unfamiliar terms with an AI Chatbot. I recommend Proton Lumo.

================================
=== Overview of SSecPPrideRR ===
================================

@ ordered list
<li> Searchability.  The file you're after should be easy to find, especially via search. </li>
<li> Security.       System compromise should be extremely difficult. </li>
<li> Provability.    The fact that a file was last edited on a particular day should be provable. </li>
<li> Privacy.        Minimal data and metadata leaks out to third parties. </li>
<li> Deniability.    Whether or not we're in possession of a file should be unclear to anyone but you. </li>
<li> Deletability.   Deleted data should be fundamentally gone, not just invisible. </li>
<li> Reliability.    The system keeps working reliably without breaking. </li>
<li> Recoverability. You files are backed up remotely and recoverable if things go wrong. </li>

===========================================
=== Hardware Vulnerabilities: Key Facts ===
===========================================

@ paragraph
All hardware has vulnerabilities.

@ paragraph
Attacks may rely on:

@ unordered list
<li>Underlying issues with the physical hardware</li>
<li>Firmware-level bugs and backdoors</li>
<li>Driver-level bugs and backdoors</li>

@ paragraph
Other issues include:

@ unordered list
<li>Data linger</li>
<li>Incompatibility with secure software, like QubesOS</li>
<li>Incompatibility with secure workflows, like the Hero to Zero standard workflow</li>

@ paragraph
All of the above can and have been used to bypass protections, often leading to full compromise of the affected system, and/or exposure of sensitive data.

===================================
=== Buying New Hardware: Step 1 ===
===================================

@ paragraph
To mitigate the aforementioned issues, you should talk to a knowledgeable agent (like an AI Chatbot, or trusted advisor) before purchasing new hardware. The following prompt can be helpful.

@ bash
I'm interested in buying [type of hardware, e.g., webcam, tablet, SSD, HDD, etc.]. Can you help me evaluate the security and privacy risks, and recommend some brands and options? Please consider:
0. Performance and cost effectiveness
1. Possible vulnerabilities at the hardware, firmware, and driver levels
2. The availability of open source options
3. CVE history
4. Risks of data linger and how to mitigate it
5. Compatibility with Debian Linux and QubesOS
6. Any known backdoors or vendor-specific concerns
7. Jurisdictional risk, including risks from misbehaving actors at the state and corporate level
8. The main hardware vulnerabilities in the domain, and the extent to which your recommendations mitigate them effectively
I strongly prefer off-the-shelf consumer-grade hardware that I can find at ordinary computer hardware shops.
Give concrete recommendations, not just big-picture stuff.
Be comprehensive, but brief. Answer in dot points.

===================================
=== Two Attacks To Keep In Mind ===
===================================

@ paragraph
<strong>Supply Chain Attacks<strong> A supplier (of hardware or software) is compromised. This can occur as a result of rogue employees, inappropriate internal company policies, the theft of cryptographic keys by malicious third parties, and compulsion of suppliers by governments and/or judicial institutions.

@ paragraph
<strong>Transit-Phase Attacks<strong> Hardware or software is compromised in transit. This includes <em>man in the middle</em> (MitM) attacks, which refers to attacks that rely on modifying data in transit, and <em>interdiction attacks</em>, which refer to malicious attempts to tamper with hardware in transit.

===================================
=== Buying New Hardware: Step 2 ===
===================================

@ paragraph
For some people following this guide, security is just a hobby. For others, it's life or death. Depending therefore on your threat model, interdiction attacks may or may not pose a meaningful risk.

@ paragraph
If you're seeking to control this attack vector, try to avoid online purchases as far as possible. Buy off-the-shelf parts at a physical store. You can use Tor Browser to identify nearby hardware shops, and then randomize between them. Don't call up the store before you arrive. Leave your phone at home, with Airplane Mode deactivated. Pay with cash. Refuse to provide any identifying details if permitted by law.

@ paragraph
Of course, for many users, targeted interdiction attacks aren't a meaningful risk. Make up your own mind based on your own circumstances.

============================
=== Hardware for QubesOS ===
============================

@ paragraph
You'll need a reasonably powerful personal computer to be able to use Qubes comfortably and securely.

@ paragraph
If you're going out to buy a new desktop computer for this purpose, here's a quick checklist of what to look for. There's a lot of technical jargon below, but don't worry, I talk it out in subsequent sections.

@ paragraph
The CPU and motherboard should ideally be AMD, not Intel. This is to mitigate the risks posed by the Intel Management Engine, which can sniff incoming packets before the CPU ever gets to see them (the AMD architecture doesn't allow this). Additionally, ensure the motherboard:

@ unordered list
<li>Has a PS/2 socket for the keyboard.</li>
<li>Has a 3.5 mm (â…›-inch) TRS jack for audio.</li>
<li>Has at least 2 USB controllers (it's not enough to have at least 2 USB plugs).</li>

@ paragraph
You'll also want:

@ unordered list
<li>A wired keyboard with a PS/2 keyboard plug.</li>
<li>A wired USB mouse.</li>
<li>RAM with TRR and ECC.</li>
<li>An NVMe SSD where you'll install Qubes.</li>
<li>An HDD where you'll keep most of your user data.</li>

@ paragraph
I'll now explain the importance of each of the above, focusing on their impact on your overall security posture.

@ paragraph
There's a final section for users who either have a laptop, or wish to purchase a laptop.

========================================
=== USB ===
========================================

@ paragraph

=======================================
=== Key Facts About Storage Devices ===
=======================================

@ paragraph
When buying mass storage devices, our main SecPride concern is deletability.

@ paragraph
Data linger is a <strong>huge</strong> problem, especially for consumer-grade SSDs, which oftentimes don't respect instructions to delete this or that block. The end result is that files look deleted and unrecoverable from your point of view, but they can nevertheless be reconstructed by someone with the necessary gadgets, if they have somehow obtained your disk encryption key.

@ paragraph
To mitigate this, it's a good idea to have an HDD attached to your system, and to build a workflow that ensures user data is only ever stored on the HDD. Combined with appropriate plausible deniability tools, this usually results in an overall strong SecPride posture, as compared with SSD alone.

========================
=== For Laptop Users ===
========================

@ paragraph
Laptop users are somewhat stuck with what they've got, but installing an HDD is nevertheless a good idea.
On the other hand, if you're looking to buy a laptop, you should look for a variety of very specific features, mirroring the ones for a desktop.

@ paragraph
Here's a prompt you can use to help find a new laptop:

@ bash
I'm looking for an x86-64 laptop with rowhammer resistant RAM. Ideally, failing that, it should have both an SSD and an HDD builtin; failing that, it should at least have a slot where I can manually insert an internal HDD. I'm not an online shopper; I'm looking for a laptop I can go out and buy at a typical shop, not one I'm forced to order online. Ideas?

One last remark: it'd be nice to avoid internal USB and/or HID connections for the builtin keyboard and mouse. I prefer PS/2 or I2C connections. 

@ paragraph
You'll probably be told there's no such laptop. That's fine; just do your best to approximate the spec. This usually means asking specifically for a laptop with rowhammer resistant ram and a slot for a hard disk. Then you run some terminal commands to find out how it's internally wired, and whether it meets our no-USB goals.

@ paragraph
I recommend going to the shop with a bootable Linux USB. Once you've found a candidate laptop, tell them you want to check how the keyboard and mouse are internally wired. To do this, they either need to (a) give you terminal access on the pre-installed Windows, or (b) allow you to live boot your Linux USB.

@ paragraph
On Windows, the following commands will help you diagnose whether the dreaded USB are being used for the keyboard and mouse:

@ bash
wmic path Win32_Keyboard get Name,DeviceID
wmic path Win32_PointingDevice get Name,DeviceID

@ paragraph
On Linux, you'd instead use:

@ bash
cat /proc/bus/input/devices | grep -A5 -i keyboard
cat /proc/bus/input/devices | grep -A5 -i mouse

@ paragraph
If you see anything about USB after running these commands, run for the hills!